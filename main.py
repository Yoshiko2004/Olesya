import json
from random import choice
import telebot
from telebot import types

bot = telebot.TeleBot("7129636315:AAEWG7SkG0qHedKiJpj05QW9kTsv9ackYhI")

#–æ—Ç–∫—Ä—ã–≤–∞–µ–º –∏ —á–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∞ JSON
with open("base.json", "r", encoding='utf8') as b:
    base_dialog = json.load(b)

with open("drawing.json", "r", encoding='utf8') as d:
    drawing_dialog = json.load(d)

with open("olesya.json", "r", encoding='utf8') as o:
    olesya_dialog = json.load(o)

with open("music.json", "r", encoding='utf8') as m:
    music_dialog = json.load(m)

with open("school.json", "r", encoding='utf8') as s:
    school_dialog = json.load(s)

with open("preferences.json.", "r", encoding='utf8') as p:
    preference_dialog = json.load(p)

with open("life.json", "r", encoding='utf8') as l:
    life_dialog = json.load(l)


#–û–ª–µ—Å—è - —Å–º–µ–ª–∞—è –¥–µ–≤—É—à–∫–∞, –ø–æ—ç—Ç–æ–º—É –æ–Ω–∞ —Ä–µ—à–∞–µ—Ç—Å—è –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –ø–µ—Ä–≤–æ–π. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –µ—ë –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.
@bot.message_handler(commands=['start'])
def start(message):
    bot_greeting = base_dialog[0]["greeting"]["bot_side"]
    bot.reply_to(message, choice(bot_greeting))


#–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º—ã –µ–π —Å–∫–∞–∑–∞–ª–∏ –ø—Ä–∏–≤–µ—Ç –≤ –æ—Ç–≤–µ—Ç, –æ–Ω–∞ —É –Ω–∞—Å —Ä–µ—à–∞–µ—Ç—Å—è —Å–ø—Ä–æ—Å–∏—Ç—å –æ –Ω–∞—à–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏.
#–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—ã–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–∞—à–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞ –Ω–∏–º –≤—Ç–æ—Ä–æ –≤–æ–ø—Ä–æ—Å.
@bot.message_handler(content_types=['text'])
def continue_dialog(message):
    right_word_g = False

    your_greeting = base_dialog[0]["greeting"]["your_side"]
    her_question = base_dialog[0]["whatsapp"]["bot_side"]

    for greet in your_greeting:
        if greet in str(message.text).lower():
            right_word_g = True

    if right_word_g:
        msg = bot.reply_to(message, choice(her_question))
        bot.register_next_step_handler(msg, whatsapp)
    elif not right_word_g:
        msg = bot.reply_to(message, "–°–æ—Ä—è–Ω, –ø–æ–Ω—è—Ç—å –Ω–µ –º–æ–≥—É...\n:_[\n–ù–æ —Å–ø—Ä–æ—Å–∏—Ç—å —Ç–µ–±—è –æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–∏ —Å—Ç–æ–∏—Ç. –ö–∞–∫ —Ç—ã?")
        bot.register_next_step_handler(msg, whatsapp)


#–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –Ω–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å.
@bot.message_handler(content_types=['text'])
def whatsapp(message):
    themes = types.ReplyKeyboardMarkup()
    drawing = types.KeyboardButton("üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû")
    life = types.KeyboardButton("üçÉ–û –ñ–ò–ó–ù–òüçÉ")
    school = types.KeyboardButton("ü•Ä–û –®–ö–û–õ–ïü•Ä")
    music = types.KeyboardButton("üçÑ–û –ú–£–ó–´–ö–ïüçÑ")
    preferences = types.KeyboardButton("üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì")
    me = types.KeyboardButton("‚ú®–û–ë–û –ú–ù–ï‚ú®")

    themes.row(drawing, me)
    themes.row(life, school)
    themes.row(music, preferences)

    right_word_a = False

    your_answer = base_dialog[0]["whatsapp"]["your_side"]
    her_answer = base_dialog[0]["whatsapp"]["bot_answer"]

    for whats in your_answer:
        if whats in str(message.text).lower():
            right_word_a = True

    if right_word_a:
        mg = bot.reply_to(message, choice(her_answer), reply_markup=themes)
        bot.register_next_step_handler(mg, choose)
    else:
        mg = bot.reply_to(message, "–ú—ã —Ç–æ—á–Ω–æ –Ω–∞ –æ–¥–Ω–æ–º —è–∑—ã–∫–µ –≥–æ–≤–æ—Ä–∏–º?\n–õ–∞–¥–Ω–æ, –æ–ø—É—Å—Ç–∏–º.\n–ü–æ–≥–æ–≤–æ—Ä–∏–º –º–æ–∂–µ—Ç?", reply_markup=themes)
        bot.register_next_step_handler(mg, choose)


#–í –æ–±—â–µ–º –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Å–Ω–æ–≤–Ω—ã—Ö —à–µ—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫.
@bot.message_handler(content_types=['text'])
def choose(message):
    # –î–∞–Ω–Ω—ã–π –±–ª–æ–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ —Ç–µ–º—É —Ä–∏—Å–æ–≤–∞–Ω–∏—è. –ü–æ—è–≤–ª—è—é—Ç—Å—è –¥–≤–µ –ø–æ–¥—Ç–µ–º—ã –∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥.
    if message.text == "üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû":
        draw = types.ReplyKeyboardMarkup()
        problems = types.KeyboardButton("üí¢–û –ü–†–û–ë–õ–ï–ú–ê–•üí¢")
        succes = types.KeyboardButton("üå∑–û–ë –£–°–ü–ï–•–ê–•üå∑")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        draw.row(problems, succes)
        draw.row(back)

        msgd = bot.send_message(message.chat.id, text=choice(base_dialog[0]["choose"]["drawing"]), reply_markup=draw)
        bot.register_next_step_handler(msgd, draws)

    # –î–∞–Ω–Ω—ã–π –±–ª–æ–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ —Ç–µ–º—É –∂–∏–∑–Ω–∏ –û–ª–µ—Å–∏. –ü–æ—è–≤–ª—è—é—Ç—Å—è —Ç—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥.
    elif message.text == "üçÉ–û –ñ–ò–ó–ù–òüçÉ":
        life = types.ReplyKeyboardMarkup()
        rest = types.KeyboardButton("–ö–∞–∫ –≤—ã –æ—Ç–¥—ã—Ö–∞–µ—Ç–µ?")
        family = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–º—å–µ.")
        you = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, –∫–∞–∫ —Ç—ã –ø–æ–∂–∏–≤–∞–µ—à—å.")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        life.row(rest, family, you)
        life.row(back)

        mgsp = bot.send_message(message.chat.id, text=choice(base_dialog[0]["choose"]["life"]),
                                reply_markup=life)
        bot.register_next_step_handler(mgsp, your_life)

    # –î–∞–Ω–Ω—ã–π –±–ª–æ–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ —Ç–µ–º—É —à–∫–æ–ª—ã. –ü–æ—è–≤–ª—è—é—Ç—Å—è –¥–≤–∞ –≤–æ–ø—Ä–æ—Å–∞ –∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥.
    elif message.text == "ü•Ä–û –®–ö–û–õ–ïü•Ä":
        sch = types.ReplyKeyboardMarkup()
        like = types.KeyboardButton("–ß—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —à–∫–æ–ª–µ?")
        dislike = types.KeyboardButton("–ß—Ç–æ —Ç–µ–±–µ –≤ —à–∫–æ–ª–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        sch.row(like, dislike)
        sch.row(back)

        mssch = bot.send_message(message.chat.id, text=choice(base_dialog[0]["choose"]["school"]), reply_markup=sch)
        bot.register_next_step_handler(mssch, schools)

    # –î–∞–Ω–Ω—ã–π –±–ª–æ–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ —Ç–µ–º—É –º—É–∑—ã–∫–∏.
    # –ü–æ—è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.
    elif message.text == "üçÑ–û –ú–£–ó–´–ö–ïüçÑ":
        mus = types.ReplyKeyboardMarkup()
        c = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥")
        mus.add(c)
        msgd = bot.send_message(message.chat.id, text=choice(base_dialog[0]["choose"]["music"]), reply_markup=mus)
        bot.register_next_step_handler(msgd, musics)

    # –î–∞–Ω–Ω—ã–π –±–ª–æ–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ —Ç–µ–º—É –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π. –ü–æ—è–≤–ª—è—é—Ç—Å—è —Ç—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥.
    elif message.text == "üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì":
        pref = types.ReplyKeyboardMarkup()
        fav_food = types.KeyboardButton("–ö–∞–∫—É—é –µ–¥—É —Ç—ã –ª—é–±–∏—à—å?")
        fav_games = types.KeyboardButton("–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –≤ –∏–≥—Ä–∞—Ö?")
        fav_films = types.KeyboardButton("–ö–∞–∫–∏–µ –∂–∞–Ω—Ä—ã —Ñ–∏–ª—å–º–æ–≤ —Ç—ã –ª—é–±–∏—à—å?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        pref.row(fav_food, fav_games, fav_films)
        pref.row(back)

        mgsp = bot.send_message(message.chat.id, text=choice(base_dialog[0]["choose"]["preferences"]), reply_markup=pref)
        bot.register_next_step_handler(mgsp, preference)

    # –î–∞–Ω–Ω—ã–π –±–ª–æ–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ —Ç–µ–º—É –æ–± –û–ª–µ—Å–µ. –ü–æ—è–≤–ª—è—é—Ç—Å—è —Ç—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥.
    elif message.text == "‚ú®–û–ë–û –ú–ù–ï‚ú®":
        ques = types.ReplyKeyboardMarkup()
        age = types.KeyboardButton("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
        familia = types.KeyboardButton("–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?")
        user = types.KeyboardButton("–ü–æ—á–µ–º—É —É —Ç–µ–±—è —é–∑–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–Ω–∞—è. –ò –¢–ì —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç—ã –±–æ—Ç?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        ques.row(age, familia, user)
        ques.row(back)

        msgd = bot.send_message(message.chat.id, text=choice(base_dialog[0]["choose"]["herself"]), reply_markup=ques)
        bot.register_next_step_handler(msgd, question)


#–§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫, –æ—Ç–≤–µ—á–∞—é—â–∏—Ö –∑–∞ –ø–æ–¥—Ç–µ–º—ã —Ç–µ–º—ã —Ä–∏—Å–æ–≤–∞–Ω–∏—è.
@bot.message_handler(content_types=['text'])
def draws(message):
    #–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ –ø–æ—è–≤–ª–µ–Ω–∏–µ –µ—â—ë —Ç—Ä—ë—Ö –ø–æ–¥—Ç–µ–º –≤–Ω—É—Ç—Ä–∏ –ø–æ–¥—Ç–µ–º—ã.
    if message.text == "üí¢–û –ü–†–û–ë–õ–ï–ú–ê–•üí¢":
        problem = types.ReplyKeyboardMarkup()
        realisation = types.KeyboardButton("üò•–û –°–ö–ò–õ–õ–ï –í –¶–ï–õ–û–úüò•")
        lineart = types.KeyboardButton("üò≠–û –õ–ê–ô–ù–ïüò≠")
        render = types.KeyboardButton("üò´–û –ü–û–ö–†–ê–°–ïüò´")
        problem.row(realisation)
        problem.row(lineart, render)
        msgp = bot.send_message(message.chat.id, text="–ü–æ–Ω—è—Ç–Ω–µ–Ω—å–∫–æ...\n:_[\n–û –∫–∞–∫–æ–π –ø—Ä–æ–±–ª–µ–º–µ –ø–æ–≥–æ–≤–æ—Ä–∏–º?", reply_markup=problem)
        bot.register_next_step_handler(msgp, my_problems)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ –ø–æ—è–≤–ª–µ–Ω–∏–µ –µ—â—ë —Ç—Ä—ë—Ö –ø–æ–¥—Ç–µ–º –≤–Ω—É—Ç—Ä–∏ –ø–æ–¥—Ç–µ–º—ã.
    elif message.text == "üå∑–û–ë –£–°–ü–ï–•–ê–•üå∑":
        succes = types.ReplyKeyboardMarkup()
        style = types.KeyboardButton("üçÇ–û –°–í–û–Å–ú –°–¢–ò–õ–ïüçÇ")
        progress = types.KeyboardButton("üéÄ–û –°–í–û–Å–ú –ü–†–û–ì–†–ï–°–°–ïüéÄ")
        at_all = types.KeyboardButton("üå∫–û–ë –û–ü–´–¢–ï –†–ò–°–û–í–ê–ù–ò–Ø –í –¶–ï–õ–û–úüå∫")
        succes.row(at_all)
        succes.row(style, progress)
        msgp = bot.send_message(message.chat.id, text="–•–æ—Ä–æ—à–æ!\n;3\n–û —á—ë–º –ø–æ–≥–æ–≤–æ—Ä–∏–º?",
                                reply_markup=succes)
        bot.register_next_step_handler(msgp, my_succes)

    #–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥. –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    elif message.text == "üëâ–ù–ê–ó–ê–îüëà":
        themes = types.ReplyKeyboardMarkup()
        drawing = types.KeyboardButton("üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû")
        life = types.KeyboardButton("üçÉ–û –ñ–ò–ó–ù–òüçÉ")
        school = types.KeyboardButton("ü•Ä–û –®–ö–û–õ–ïü•Ä")
        music = types.KeyboardButton("üçÑ–û –ú–£–ó–´–ö–ïüçÑ")
        preferences = types.KeyboardButton("üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì")
        me = types.KeyboardButton("‚ú®–û–ë–û –ú–ù–ï‚ú®")
        themes.row(drawing, me)
        themes.row(life, school)
        themes.row(music, preferences)
        mgc = bot.reply_to(message, "–•–æ—Ä–æ—à–æ, –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —á—ë–º-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–º.", reply_markup=themes)
        bot.register_next_step_handler(mgc, choose)


#–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä—ë—Ö –∫–Ω–æ–ø–æ–∫, –æ—Ç–≤–µ—á–∞—é—â–∏—Ö –∑–∞ —Ç—Ä–∏ —Ä–∞–∑–ª–∏—á—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –¥–∏–∞–ª–æ–≥–∞.
@bot.message_handler(content_types=['text'])
def my_problems(message):
    #–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–∏–∞–ª–æ–≥ –Ω–∞ —Ç–µ–º—É –ø—Ä–æ–±–ª–µ–º –≤ —Ä–∏—Å–æ–≤–∞–Ω–∏–∏ –≤ —Ü–µ–ª–æ–º.
    if message.text == "üò•–û –°–ö–ò–õ–õ–ï –í –¶–ï–õ–û–úüò•":
        opiniond = types.ReplyKeyboardMarkup()
        same = types.KeyboardButton("–ñ–∏–∑–∞, —É –º–µ–Ω—è —Ç–∞–∫–æ–µ —á–∞—Å—Ç–æ —Å–ª—É—á–∞–µ—Ç—Å—è(–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é)...")
        good = types.KeyboardButton("–û—É... –°–æ–∂–∞–ª–µ—é... –ù–∞–¥–µ—é—Å—å, —Ç—ã –±—É–¥–µ—à—å —Å—Ç–∞–ª–∫–∏–≤–∞—Ç—å—Å—è —Å —Ç–∞–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ —Ä–µ–∂–µ...")
        neutral = types.KeyboardButton("–û–∫, –∏—á—ë?")
        negative = types.KeyboardButton("–û–π, –∫–∞–∫–∏–µ —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã? –í–æ—Ç —É –º–µ–Ω—è (–¥–ª–∏–Ω–Ω–æ–µ –Ω—ã—Ç—å—ë –æ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏)...")
        opiniond.row(same, good)
        opiniond.row(neutral, negative)
        msgo = bot.send_message(message.chat.id, text=choice(drawing_dialog[0]["drawing"]["problems"]["realisation"]),
                                reply_markup=opiniond)
        bot.register_next_step_handler(msgo, reaction_dK)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–∏–∞–ª–æ–≥ –Ω–∞ —Ç–µ–º—É –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ç—É—Ä–æ–º —Ä–∏—Å—É–Ω–∫–∞.
    elif message.text == "üò≠–û –õ–ê–ô–ù–ïüò≠":
        opinionl = types.ReplyKeyboardMarkup()
        same = types.KeyboardButton("–ñ–∏–∑–∞, —è —Ç–∞–∫–∂–µ —Å —ç—Ç–∏–º —Å—Ç—Ä–∞–¥–∞—é...")
        good = types.KeyboardButton("–û—É... –°–æ–∂–∞–ª–µ—é...–ù–∞–¥–µ—é—Å—å, —Ç—ã —Å–∫–æ—Ä–æ —Ä–∞–∑–æ–≤—å—ë—à—å—Å—è –∏ —ç—Ç–∞ –ø—Ä–æ–±–ª–µ–º–∞ –±—É–¥–µ—Ç –º—É—á–∞—Ç—å —Ç–µ–±—è –º–µ–Ω—å—à–µ...")
        neutral = types.KeyboardButton("–û–∫, –∏—á—ë?")
        negative = types.KeyboardButton("–û–π, –∫–∞–∫–∏–µ —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã? –í–æ—Ç —É –º–µ–Ω—è (–¥–ª–∏–Ω–Ω–æ–µ –Ω—ã—Ç—å—ë –æ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏)...")
        opinionl.row(same, good)
        opinionl.row(neutral, negative)
        msgo = bot.send_message(message.chat.id, text=choice(drawing_dialog[0]["drawing"]["problems"]["line"]),
                               reply_markup=opinionl)
        bot.register_next_step_handler(msgo, reaction_dK)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–∏–∞–ª–æ–≥ –Ω–∞ —Ç–µ–º—É –ø—Ä–æ–±–ª–µ–º—ã —Å —Ü–≤–µ—Ç–æ–º –≤ —Ä–∏—Å—É–Ω–∫–µ.
    elif message.text == "üò´–û –ü–û–ö–†–ê–°–ïüò´":
        opinionr = types.ReplyKeyboardMarkup()
        same = types.KeyboardButton("–ñ–∏–∑–∞, —è —Ç–∞–∫–∂–µ –Ω–∞–¥ —ç—Ç–∏–º —Å—Ç—Ä–∞–¥–∞—é...")
        good = types.KeyboardButton(
            "–û—É... –°–æ–∂–∞–ª–µ—é...–ù–∞–¥–µ—é—Å—å, —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–∫–æ—Ä–æ–º —Ç–µ–±—è –±—É–¥—É—Ç —Ä–µ–¥–∫–æ –º—É—á–∞—Ç—å...")
        neutral = types.KeyboardButton("–û–∫, –∏—á—ë?")
        negative = types.KeyboardButton("–û–π, –∫–∞–∫–∏–µ —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã? –í–æ—Ç —É –º–µ–Ω—è (–¥–ª–∏–Ω–Ω–æ–µ –Ω—ã—Ç—å—ë –æ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏)...")
        opinionr.row(same, good)
        opinionr.row(neutral, negative)
        msgo = bot.send_message(message.chat.id, text=choice(drawing_dialog[0]["drawing"]["problems"]["rendering"]),
                                reply_markup=opinionr)
        bot.register_next_step_handler(msgo, reaction_dK)


# –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä—ë—Ö –∫–Ω–æ–ø–æ–∫, –æ—Ç–≤–µ—á–∞—é—â–∏—Ö –∑–∞ —Ç—Ä–∏ —Ä–∞–∑–ª–∏—á—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –¥–∏–∞–ª–æ–≥–∞.
@bot.message_handler(content_types=['text'])
def my_succes(message):
    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–∏–∞–ª–æ–≥ –Ω–∞ —Ç–µ–º—É –æ–ø—ã—Ç–∞ –≤ —Ä–∏—Å–æ–≤–∞–Ω–∏–∏.
    if message.text == "üå∫–û–ë –û–ü–´–¢–ï –†–ò–°–û–í–ê–ù–ò–Ø –í –¶–ï–õ–û–úüå∫":
        opiniono = types.ReplyKeyboardMarkup()
        same = types.KeyboardButton("–£ –º–µ–Ω—è —Ç–∞–∫–∂–µ.")
        good = types.KeyboardButton("–£ —Ç–µ–±—è –µ—â—ë –≤—Å—ë –≤–ø–µ—Ä–µ–¥–∏, –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è!")
        neutral = types.KeyboardButton("–û–∫, –∏—á—ë?")
        negative = types.KeyboardButton("–ò—à —Ç—ã, –•–í–ê–°–¢–ê–ï–¢–°–Ø –û–ù–ê! –¢–ê–ö –ï–©–Å –ò –ù–´–¢–¨ –£–ú–£–î–†–Ø–ï–¢–°–Ø!")
        opiniono.row(same, good)
        opiniono.row(neutral, negative)
        msgo = bot.send_message(message.chat.id, text=choice(drawing_dialog[0]["drawing"]["succes"]["at_all"]),
                                reply_markup=opiniono)
        bot.register_next_step_handler(msgo, reaction_dP)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–∏–∞–ª–æ–≥ –Ω–∞ —Ç–µ–º—É —Å–≤–æ–µ–≥–æ —Å—Ç–∏–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è.
    elif message.text == "üçÇ–û –°–í–û–Å–ú –°–¢–ò–õ–ïüçÇ":
        opinionst = types.ReplyKeyboardMarkup()
        same = types.KeyboardButton("–ñ–∏–∑–∞, —É –º–µ–Ω—è —Ç–∞–∫–∂–µ —Å—Ç–∏–ª—å –∫–æ–ª–æ—à–º–∞—Ç–∏—Ç.")
        good = types.KeyboardButton("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –£–°–ü–ï–•–û–í –¢–ï–ë–ï!")
        neutral = types.KeyboardButton("–û–∫, –∏—á—ë?")
        negative = types.KeyboardButton("–¢—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ –∫–æ–º—É-—Ç–æ —Å–¥–∞–ª–∏—Å—å —Ç–≤–æ–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è? –û–ù–ò –ù–ò–ö–û–ú–£ –ù–ï –ù–£–ñ–ù–´!")
        opinionst.row(same, good)
        opinionst.row(neutral, negative)
        msgo = bot.send_message(message.chat.id, text=choice(drawing_dialog[0]["drawing"]["succes"]["style"]),
                                reply_markup=opinionst)
        bot.register_next_step_handler(msgo, reaction_dP)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–∏–∞–ª–æ–≥ –Ω–∞ —Ç–µ–º—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ —Ä–∏—Å–æ–≤–∞–Ω–∏–∏.
    elif message.text == "üéÄ–û –°–í–û–Å–ú –ü–†–û–ì–†–ï–°–°–ïüéÄ":
        opinionp = types.ReplyKeyboardMarkup()
        same = types.KeyboardButton("–•–µ–ø—Ö–µ, —É –º–µ–Ω—è —Ç–∞–∫–∂–µ...\n:_)")
        good = types.KeyboardButton("–ù–µ –ø–µ—á–∞–ª—å—Å—è —Ç—ã, —è –≤ —Ç–µ–±—è –≤–µ—Ä—é!")
        neutral = types.KeyboardButton("–û–∫, –∏—á—ë?")
        negative = types.KeyboardButton("–ü–†–ï–ö–†–ê–¢–ò –°–í–û–Å –ù–´–¢–¨–Å!!!!")
        opinionp.row(same, good)
        opinionp.row(neutral, negative)
        msgo = bot.send_message(message.chat.id, text=choice(drawing_dialog[0]["drawing"]["succes"]["progress"]),
                                reply_markup=opinionp)
        bot.register_next_step_handler(msgo, reaction_dP)


#–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —Ä–∞—Å—Å–∫–∞–∑ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö.
@bot.message_handler(content_types=['text'])
def reaction_dK(message):
    cont = types.ReplyKeyboardMarkup()
    yes = types.KeyboardButton("–î–∞")
    no = types.KeyboardButton("–ù–µ—Ç")
    cont.row(yes, no)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∫—Ä–∞–π–Ω–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
    if message.text == "–ñ–∏–∑–∞, —É –º–µ–Ω—è —Ç–∞–∫–æ–µ —á–∞—Å—Ç–æ —Å–ª—É—á–∞–µ—Ç—Å—è(–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é)..." or message.text == "–ñ–∏–∑–∞, —è —Ç–∞–∫–∂–µ —Å —ç—Ç–∏–º —Å—Ç—Ä–∞–¥–∞—é..." or message.text == "–ñ–∏–∑–∞, —è —Ç–∞–∫–∂–µ –Ω–∞–¥ —ç—Ç–∏–º —Å—Ç—Ä–∞–¥–∞—é...":
        msgrd = bot.reply_to(message, "–£—Ä–∞, —Ç—ã –º–µ–Ω—è –ø–æ–Ω–∏–º–∞–µ—à—å! –ù—É —á—Ç–æ, –ø—Ä–æ–¥–æ–ª–∂–∏–º —Ä–∞–∑–≥–æ–≤–æ—Ä –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö?", reply_markup=cont)
        bot.register_next_step_handler(msgrd, yes_no_dk)
    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
    elif message.text == "–û—É... –°–æ–∂–∞–ª–µ—é... –ù–∞–¥–µ—é—Å—å, —Ç—ã –±—É–¥–µ—à—å —Å—Ç–∞–ª–∫–∏–≤–∞—Ç—å—Å—è —Å —Ç–∞–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ —Ä–µ–∂–µ..." or message.text == "–û—É... –°–æ–∂–∞–ª–µ—é...–ù–∞–¥–µ—é—Å—å, —Ç—ã —Å–∫–æ—Ä–æ —Ä–∞–∑–æ–≤—å—ë—à—å—Å—è –∏ —ç—Ç–∞ –ø—Ä–æ–±–ª–µ–º–∞ –±—É–¥–µ—Ç –º—É—á–∞—Ç—å —Ç–µ–±—è –º–µ–Ω—å—à–µ..." or message.text == "–û—É... –°–æ–∂–∞–ª–µ—é...–ù–∞–¥–µ—é—Å—å, —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–∫–æ—Ä–æ–º —Ç–µ–±—è –±—É–¥—É—Ç —Ä–µ–¥–∫–æ –º—É—á–∞—Ç—å...":
        msgrd = bot.reply_to(message, "–ù–∞–≤—Ä—è–¥-–ª–∏ –º–Ω–µ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç, –Ω–æ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!\n–ü–æ–≥–æ–≤–æ—Ä–∏–º –µ—â—ë –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö?",
                             reply_markup=cont)
        bot.register_next_step_handler(msgrd, yes_no_dk)
    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
    elif message.text == "–û–∫, –∏—á—ë?":
        msgrd = bot.reply_to(message, "–•... –ö—Ö–º, –∫—Ö–º...\n–û–¥–∏–Ω –∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ä–≥–∞–Ω —á–µ—Ä–µ–∑ –ø–ª–µ—á–æ... –ú–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –æ–±–∏–¥–Ω–æ... –°—Ç–æ–∏—Ç –ª–∏ –≤–æ–æ–±—â–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä –Ω–∞ —ç—Ç—É —Ç–µ–º—É..?",
                             reply_markup=cont)
        bot.register_next_step_handler(msgrd, yes_no_dk)
    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç.
    elif message.text == "–û–π, –∫–∞–∫–∏–µ —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã? –í–æ—Ç —É –º–µ–Ω—è (–¥–ª–∏–Ω–Ω–æ–µ –Ω—ã—Ç—å—ë –æ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏)...":
        msgrd = bot.reply_to(message, "–ó–Ω–∞–µ—à—å, –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –Ω–∞–º –Ω–µ —Å—Ç–æ–∏—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —ç—Ç–æ—Ç –¥–∏–∞–ª–æ–≥... –ò–º–µ–µ—à—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è?",
                             reply_markup=cont)
        bot.register_next_step_handler(msgrd, yes_no_dk)


#–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —Ä–∞—Å—Å–∫–∞–∑ –æ–± —É—Å–ø–µ—Ö–∞—Ö.
@bot.message_handler(content_types=['text'])
def reaction_dP(message):
    cont = types.ReplyKeyboardMarkup()
    yes = types.KeyboardButton("–î–∞")
    no = types.KeyboardButton("–ù–µ—Ç")
    cont.row(yes, no)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∫—Ä–∞–π–Ω–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
    if message.text == "–£ –º–µ–Ω—è —Ç–∞–∫–∂–µ." or message.text == "–ñ–∏–∑–∞, —É –º–µ–Ω—è —Ç–∞–∫–∂–µ —Å—Ç–∏–ª—å –∫–æ–ª–æ—à–º–∞—Ç–∏—Ç." or message.text == "–•–µ–ø—Ö–µ, —É –º–µ–Ω—è —Ç–∞–∫–∂–µ...":
        msgrd = bot.reply_to(message, "–ê –º—ã –ø–æ—Ö–æ–∂–∏\n;3\n–ü—Ä–æ–¥–æ–ª–∂–∏–º –¥–∏–∞–ª–æ–≥?", reply_markup=cont)
        bot.register_next_step_handler(msgrd, yes_no_dp)
    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
    elif message.text == "–£ —Ç–µ–±—è –µ—â—ë –≤—Å—ë –≤–ø–µ—Ä–µ–¥–∏, –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è!" or message.text == "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –£–°–ü–ï–•–û–í –¢–ï–ë–ï!" or message.text == "–ù–µ –ø–µ—á–∞–ª—å—Å—è —Ç—ã, —è –≤ —Ç–µ–±—è –≤–µ—Ä—é!":
        msgrd = bot.reply_to(message, "–ù–∞–≤—Ä—è–¥-–ª–∏ –º–Ω–µ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç, –Ω–æ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!\n–ü–æ–≥–æ–≤–æ—Ä–∏–º –µ—â—ë?",
                             reply_markup=cont)
        bot.register_next_step_handler(msgrd, yes_no_dp)
    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
    elif message.text == "–û–∫, –∏—á—ë?":
        msgrd = bot.reply_to(message,
                             "–•... –ö—Ö–º, –∫—Ö–º...\n–û–¥–∏–Ω –∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ä–≥–∞–Ω —á–µ—Ä–µ–∑ –ø–ª–µ—á–æ... –ú–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –æ–±–∏–¥–Ω–æ... –°—Ç–æ–∏—Ç –ª–∏ –≤–æ–æ–±—â–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä –Ω–∞ —ç—Ç—É —Ç–µ–º—É..?",
                             reply_markup=cont)
        bot.register_next_step_handler(msgrd, yes_no_dp)
    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç.
    elif message.text == "–ü–†–ï–ö–†–ê–¢–ò –°–í–û–Å –ù–´–¢–¨–Å!!!!" or message.text == "–¢—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ –∫–æ–º—É-—Ç–æ —Å–¥–∞–ª–∏—Å—å —Ç–≤–æ–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è? –û–ù–ò –ù–ò–ö–û–ú–£ –ù–ï –ù–£–ñ–ù–´!" or "–ò—à —Ç—ã, –•–í–ê–°–¢–ê–ï–¢–°–Ø –û–ù–ê! –¢–ê–ö –ï–©–Å –ò –ù–´–¢–¨ –£–ú–£–î–†–Ø–ï–¢–°–Ø!":
        msgrd = bot.reply_to(message,
                             "–ó–Ω–∞–µ—à—å, –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –Ω–∞–º –Ω–µ —Å—Ç–æ–∏—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —ç—Ç–æ—Ç –¥–∏–∞–ª–æ–≥... –ò–º–µ–µ—à—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è?",
                             reply_markup=cont)
        bot.register_next_step_handler(msgrd, yes_no_dp)


#–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ —Ç–µ–º—É –ø—Ä–æ–±–ª–µ–º –≤ —Ä–∏—Å–æ–≤–∞–Ω–∏–∏.
@bot.message_handler(content_types=['text'])
def yes_no_dk(message):
    if message.text == "–î–∞":
        problem = types.ReplyKeyboardMarkup()
        realisation = types.KeyboardButton("üò•–û –°–ö–ò–õ–õ–ï –í –¶–ï–õ–û–úüò•")
        lineart = types.KeyboardButton("üò≠–û –õ–ê–ô–ù–ïüò≠")
        render = types.KeyboardButton("üò´–û –ü–û–ö–†–ê–°–ïüò´")
        problem.row(realisation)
        problem.row(lineart, render)
        mg = bot.reply_to(message, "–û–∫, –¥–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º", reply_markup=problem)
        bot.register_next_step_handler(mg, my_problems)
    elif message.text == "–ù–µ—Ç":
        draw = types.ReplyKeyboardMarkup()
        problems = types.KeyboardButton("üí¢–û –ü–†–û–ë–õ–ï–ú–ê–•üí¢")
        succes = types.KeyboardButton("üå∑–û–ë –£–°–ü–ï–•–ê–•üå∑")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        draw.row(problems, succes)
        draw.row(back)
        mg = bot.reply_to(message, "–ü–æ–Ω—è—Ç–Ω–µ–Ω—å–∫–æ...", reply_markup=draw)
        bot.register_next_step_handler(mg, draws)


#–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ —Ç–µ–º—É —É—Å–ø–µ—Ö–æ–≤ –≤ —Ä–∏—Å–æ–≤–∞–Ω–∏–∏.
@bot.message_handler(content_types=['text'])
def yes_no_dp(message):
    if message.text == "–î–∞":
        succes = types.ReplyKeyboardMarkup()
        style = types.KeyboardButton("üçÇ–û –°–í–û–Å–ú –°–¢–ò–õ–ïüçÇ")
        progress = types.KeyboardButton("üéÄ–û –°–í–û–Å–ú –ü–†–û–ì–†–ï–°–°–ïüéÄ")
        at_all = types.KeyboardButton("üå∫–û–ë –û–ü–´–¢–ï –†–ò–°–û–í–ê–ù–ò–Ø –í –¶–ï–õ–û–úüå∫")
        succes.row(at_all)
        succes.row(style, progress)
        mg = bot.reply_to(message, "–û–∫, –¥–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º", reply_markup=succes)
        bot.register_next_step_handler(mg, my_succes)
    elif message.text == "–ù–µ—Ç":
        draw = types.ReplyKeyboardMarkup()
        problems = types.KeyboardButton("üí¢–û –ü–†–û–ë–õ–ï–ú–ê–•üí¢")
        succes = types.KeyboardButton("üå∑–û–ë –£–°–ü–ï–•–ê–•üå∑")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        draw.row(problems, succes)
        draw.row(back)
        mg = bot.reply_to(message, "–ü–æ–Ω—è—Ç–Ω–µ–Ω—å–∫–æ...", reply_markup=draw)
        bot.register_next_step_handler(mg, draws)


#–§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫, –æ—Ç–≤–µ—á–∞—é—â–∏—Ö –∑–∞ –≤–æ–ø—Ä–æ—Å—ã –∫ –û–ª–µ—Å–µ
@bot.message_handler(content_types=['text'])
def question(message):
    # –û–ª–µ—Å—è –Ω–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç.
    if message.text == "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?":
        ques = types.ReplyKeyboardMarkup()
        age = types.KeyboardButton("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
        familia = types.KeyboardButton("–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?")
        user = types.KeyboardButton("–ü–æ—á–µ–º—É —É —Ç–µ–±—è —é–∑–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–Ω–∞—è. –ò –¢–ì —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç—ã –±–æ—Ç?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        ques.row(age, familia, user)
        ques.row(back)

        bot.reply_to(message, text=choice(olesya_dialog[0]["herself"]["age"]))
        msq = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ –µ—â—ë –∏–º–µ—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã", reply_markup=ques)
        bot.register_next_step_handler(msq, question)

    # –û–ª–µ—Å—è –ù–ï –Ω–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é.
    elif message.text == "–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?":
        ques = types.ReplyKeyboardMarkup()
        age = types.KeyboardButton("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
        familia = types.KeyboardButton("–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?")
        user = types.KeyboardButton("–ü–æ—á–µ–º—É —É —Ç–µ–±—è —é–∑–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–Ω–∞—è. –ò –¢–ì —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç—ã –±–æ—Ç?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        ques.row(age, familia, user)
        ques.row(back)

        bot.reply_to(message, text=choice(olesya_dialog[0]["herself"]["familia"]))
        msq = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ –µ—â—ë –∏–º–µ—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã", reply_markup=ques)
        bot.register_next_step_handler(msq, question)

    # –ü–æ—è–≤–ª—è—é—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–∑—ä—è—Å–Ω–µ–Ω–∏—è.
    elif message.text == "–ü–æ—á–µ–º—É —É —Ç–µ–±—è —é–∑–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–Ω–∞—è. –ò –¢–ì —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç—ã –±–æ—Ç?":
        ques = types.ReplyKeyboardMarkup()
        age = types.KeyboardButton("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
        familia = types.KeyboardButton("–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?")
        user = types.KeyboardButton("–ü–æ—á–µ–º—É —É —Ç–µ–±—è —é–∑–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–Ω–∞—è. –ò –¢–ì —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç—ã –±–æ—Ç?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        ques.row(age, familia, user)
        ques.row(back)

        bot.reply_to(message, text=choice(olesya_dialog[0]["herself"]["user"]))
        msq = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ –µ—â—ë –∏–º–µ—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã", reply_markup=ques)
        bot.register_next_step_handler(msq, question)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥. –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    elif message.text == "üëâ–ù–ê–ó–ê–îüëà":
        themes = types.ReplyKeyboardMarkup()
        drawing = types.KeyboardButton("üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû")
        life = types.KeyboardButton("üçÉ–û –ñ–ò–ó–ù–òüçÉ")
        school = types.KeyboardButton("ü•Ä–û –®–ö–û–õ–ïü•Ä")
        music = types.KeyboardButton("üçÑ–û –ú–£–ó–´–ö–ïüçÑ")
        preferences = types.KeyboardButton("üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì")
        me = types.KeyboardButton("‚ú®–û–ë–û –ú–ù–ï‚ú®")
        themes.row(drawing, me)
        themes.row(life, school)
        themes.row(music, preferences)
        msq = bot.reply_to(message, "–•–æ—Ä–æ—à–æ, –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —á—ë–º-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–º.", reply_markup=themes)
        bot.register_next_step_handler(msq, choose)


# –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–∑–≥–æ–≤–æ—Ä –Ω–∞ —Ç–µ–º—É –º—É–∑—ã–∫–∏. –û–ª–µ—Å—è —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –Ω–∞—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≤—ã–¥–∞—á—É —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ.
@bot.message_handler(content_types=['text'])
def musics(message):
    if message.text == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥":
        m_y_n = types.ReplyKeyboardMarkup()
        y = types.KeyboardButton("–î–∞")
        n = types.KeyboardButton("–ù–µ—Ç")
        m_y_n.row(y, n)
        bot.send_message(message.chat.id, text=choice(music_dialog[0]["music"]["first_message"]))
        mgm = bot.reply_to(message, choice(music_dialog[0]["music"]["second_message"]), reply_markup=m_y_n)
        bot.register_next_step_handler(mgm, music_url)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
@bot.message_handler(content_types=['text'])
def music_url(message):
    # –ï—Å–ª–∏ –º—ã —Å–æ–≥–ª–∞—Å–∏–º—Å—è, –Ω–∞–º –¥–∞–¥—É—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–¥–Ω–æ –∏–∑ 3 –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∏–¥–µ–æ, –ø–µ—Ä–µ–∫–∏–Ω—É–≤ –Ω–∞ "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    if message.text == "–î–∞":
        links = types.InlineKeyboardMarkup()
        linkc = choice(["https://www.youtube.com/watch?v=l-2hOKIrIyI", "https://www.youtube.com/watch?v=lTRiuFIWV54",
                        "https://www.youtube.com/watch?v=FgS5DEMg8K0"])
        link = types.InlineKeyboardButton(choice(["üå∏", "üíó", "üí¶"]), url=linkc)
        links.add(link)
        bot.send_message(message.chat.id, choice(music_dialog[0]["music"]["third_message"]["yes"]), reply_markup=links)

        themes = types.ReplyKeyboardMarkup()
        drawing = types.KeyboardButton("üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû")
        life = types.KeyboardButton("üçÉ–û –ñ–ò–ó–ù–òüçÉ")
        school = types.KeyboardButton("ü•Ä–û –®–ö–û–õ–ïü•Ä")
        music = types.KeyboardButton("üçÑ–û –ú–£–ó–´–ö–ïüçÑ")
        preferences = types.KeyboardButton("üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì")
        me = types.KeyboardButton("‚ú®–û–ë–û –ú–ù–ï‚ú®")

        themes.row(drawing, me)
        themes.row(life, school)
        themes.row(music, preferences)

        mgm = bot.reply_to(message, choice(music_dialog[0]["music"]["fourth_message"]), reply_markup=themes)
        bot.register_next_step_handler(mgm, choose)

    # –ï—Å–ª–∏ –º—ã –¥–∞–¥–∏–º –û–ª–µ—Å–µ –æ—Ç–∫–∞–∑, –Ω–∞–º –ù–ï –¥–∞–¥—É—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–¥–Ω–æ –∏–∑ 3 –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∏–¥–µ–æ, –ø–µ—Ä–µ–∫–∏–Ω—É–≤ –Ω–∞ "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    elif message.text == "–ù–µ—Ç":
        themes = types.ReplyKeyboardMarkup()
        drawing = types.KeyboardButton("üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû")
        life = types.KeyboardButton("üçÉ–û –ñ–ò–ó–ù–òüçÉ")
        school = types.KeyboardButton("ü•Ä–û –®–ö–û–õ–ïü•Ä")
        music = types.KeyboardButton("üçÑ–û –ú–£–ó–´–ö–ïüçÑ")
        preferences = types.KeyboardButton("üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì")
        me = types.KeyboardButton("‚ú®–û–ë–û –ú–ù–ï‚ú®")

        themes.row(drawing, me)
        themes.row(life, school)
        themes.row(music, preferences)
        mg = bot.reply_to(message, choice(music_dialog[0]["music"]["third_message"]["no"]), reply_markup=themes)
        bot.register_next_step_handler(mg, choose)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–µ—Ç –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–∏–µ –∑–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ç–µ–º—É —à–∫–æ–ª—ã.
@bot.message_handler(content_types=['text'])
def schools(message):
    # –û–ª–µ—Å—è –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞–º –æ —Ç–æ–º, —á—Ç–æ –µ–π –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —à–∫–æ–ª–µ.
    if message.text == "–ß—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —à–∫–æ–ª–µ?":
        sch = types.ReplyKeyboardMarkup()
        like = types.KeyboardButton("–ß—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —à–∫–æ–ª–µ?")
        dislike = types.KeyboardButton("–ß—Ç–æ —Ç–µ–±–µ –≤ —à–∫–æ–ª–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        sch.row(like, dislike)
        sch.row(back)

        bot.reply_to(message, choice(school_dialog[0]["school"]["like"]))
        msgo = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã –µ—â—ë –æ—Å—Ç–∞–ª–∏—Å—å?",
                                reply_markup=sch)
        bot.register_next_step_handler(msgo, schools)

    # –û–ª–µ—Å—è –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞–º –æ —Ç–æ–º, —á—Ç–æ –ù–ï –µ–π –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —à–∫–æ–ª–µ.
    elif message.text == "–ß—Ç–æ —Ç–µ–±–µ –≤ —à–∫–æ–ª–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?":
        sch = types.ReplyKeyboardMarkup()
        like = types.KeyboardButton("–ß—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —à–∫–æ–ª–µ?")
        dislike = types.KeyboardButton("–ß—Ç–æ —Ç–µ–±–µ –≤ —à–∫–æ–ª–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        sch.row(like, dislike)
        sch.row(back)

        bot.reply_to(message, choice(school_dialog[0]["school"]["dislike"]))
        msgo = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã –µ—â—ë –æ—Å—Ç–∞–ª–∏—Å—å?",
                                reply_markup=sch)
        bot.register_next_step_handler(msgo, schools)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥. –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    elif message.text == "üëâ–ù–ê–ó–ê–îüëà":
        themes = types.ReplyKeyboardMarkup()
        drawing = types.KeyboardButton("üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû")
        life = types.KeyboardButton("üçÉ–û –ñ–ò–ó–ù–òüçÉ")
        school = types.KeyboardButton("ü•Ä–û –®–ö–û–õ–ïü•Ä")
        music = types.KeyboardButton("üçÑ–û –ú–£–ó–´–ö–ïüçÑ")
        preferences = types.KeyboardButton("üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì")
        me = types.KeyboardButton("‚ú®–û–ë–û –ú–ù–ï‚ú®")
        themes.row(drawing, me)
        themes.row(life, school)
        themes.row(music, preferences)
        msq = bot.reply_to(message, "–•–æ—Ä–æ—à–æ, –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —á—ë–º-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–º.", reply_markup=themes)
        bot.register_next_step_handler(msq, choose)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–µ—Ç –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–∏–µ –∑–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ç–µ–º—É –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –û–ª–µ—Å–∏.
@bot.message_handler(content_types=['text'])
def preference(message):
    # –û–ª–µ—Å—è –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞–º –æ —Å–≤–æ–µ–π –ª—é–±–∏–º–æ–π –µ–¥–µ.
    if message.text == "–ö–∞–∫—É—é –µ–¥—É —Ç—ã –ª—é–±–∏—à—å?":
        pref = types.ReplyKeyboardMarkup()
        fav_food = types.KeyboardButton("–ö–∞–∫—É—é –µ–¥—É —Ç—ã –ª—é–±–∏—à—å?")
        fav_games = types.KeyboardButton("–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –≤ –∏–≥—Ä–∞—Ö?")
        fav_films = types.KeyboardButton("–ö–∞–∫–∏–µ –∂–∞–Ω—Ä—ã —Ñ–∏–ª—å–º–æ–≤ —Ç—ã –ª—é–±–∏—à—å?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        pref.row(fav_food, fav_games, fav_films)
        pref.row(back)

        bot.reply_to(message, choice(preference_dialog[0]["preferences"]["food"]))
        msgo = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã –∏–º–µ—é—Ç—Å—è?",
                                reply_markup=pref)
        bot.register_next_step_handler(msgo, preference)

    # –û–ª–µ—Å—è –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞–º –æ —Å–≤–æ—ë–º –ª—é–±–∏–º–æ–º –∂–∞–Ω—Ä–µ –∏–≥—Ä.
    elif message.text == "–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –≤ –∏–≥—Ä–∞—Ö?":
        pref = types.ReplyKeyboardMarkup()
        fav_food = types.KeyboardButton("–ö–∞–∫—É—é –µ–¥—É —Ç—ã –ª—é–±–∏—à—å?")
        fav_games = types.KeyboardButton("–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –≤ –∏–≥—Ä–∞—Ö?")
        fav_films = types.KeyboardButton("–ö–∞–∫–∏–µ –∂–∞–Ω—Ä—ã —Ñ–∏–ª—å–º–æ–≤ —Ç—ã –ª—é–±–∏—à—å?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        pref.row(fav_food, fav_games, fav_films)
        pref.row(back)

        bot.reply_to(message, choice(preference_dialog[0]["preferences"]["game"]))
        msgo = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã –µ—â—ë –æ—Å—Ç–∞–ª–∏—Å—å?",
                                reply_markup=pref)
        bot.register_next_step_handler(msgo, preference)

    # –û–ª–µ—Å—è –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞–º –æ —Å–≤–æ—ë–º –ª—é–±–∏–º–æ–º —Ç–∏–ø–µ —Ñ–∏–ª—å–º–æ–≤.
    elif message.text == "–ö–∞–∫–∏–µ –∂–∞–Ω—Ä—ã —Ñ–∏–ª—å–º–æ–≤ —Ç—ã –ª—é–±–∏—à—å?":
        pref = types.ReplyKeyboardMarkup()
        fav_food = types.KeyboardButton("–ö–∞–∫—É—é –µ–¥—É —Ç—ã –ª—é–±–∏—à—å?")
        fav_games = types.KeyboardButton("–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –≤ –∏–≥—Ä–∞—Ö?")
        fav_films = types.KeyboardButton("–ö–∞–∫–∏–µ –∂–∞–Ω—Ä—ã —Ñ–∏–ª—å–º–æ–≤ —Ç—ã –ª—é–±–∏—à—å?")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        pref.row(fav_food, fav_games, fav_films)
        pref.row(back)

        bot.reply_to(message, choice(preference_dialog[0]["preferences"]["films"]))
        msgo = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã –µ—â—ë –æ—Å—Ç–∞–ª–∏—Å—å?",
                                reply_markup=pref)
        bot.register_next_step_handler(msgo, preference)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥. –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    elif message.text == "üëâ–ù–ê–ó–ê–îüëà":
        themes = types.ReplyKeyboardMarkup()
        drawing = types.KeyboardButton("üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû")
        life = types.KeyboardButton("üçÉ–û –ñ–ò–ó–ù–òüçÉ")
        school = types.KeyboardButton("ü•Ä–û –®–ö–û–õ–ïü•Ä")
        music = types.KeyboardButton("üçÑ–û –ú–£–ó–´–ö–ïüçÑ")
        preferences = types.KeyboardButton("üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì")
        me = types.KeyboardButton("‚ú®–û–ë–û –ú–ù–ï‚ú®")
        themes.row(drawing, me)
        themes.row(life, school)
        themes.row(music, preferences)
        msq = bot.reply_to(message, "–•–æ—Ä–æ—à–æ, –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —á—ë–º-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–º.", reply_markup=themes)
        bot.register_next_step_handler(msq, choose)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–µ—Ç –∫–Ω–æ–ø–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–∏–µ –∑–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ç–µ–º—É –∂–∏–∑–Ω–∏.
@bot.message_handler(content_types=['text'])
def your_life(message):
    # –û–ª–µ—Å—è –≤–µ–¥—É–µ—Ç –Ω–∞–º –æ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏.
    if message.text == "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–º—å–µ.":
        life = types.ReplyKeyboardMarkup()
        rest = types.KeyboardButton("–ö–∞–∫ –≤—ã –æ—Ç–¥—ã—Ö–∞–µ—Ç–µ?")
        family = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–º—å–µ.")
        you = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, –∫–∞–∫ —Ç—ã –ø–æ–∂–∏–≤–∞–µ—à—å.")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        life.row(rest, family, you)
        life.row(back)

        bot.reply_to(message, choice(life_dialog[0]["life"]["family"]["first"]))
        bot.reply_to(message, choice(life_dialog[0]["life"]["family"]["second"]))
        img = open('my_family.png', 'rb')
        bot.send_photo(message.chat.id, img)
        bot.reply_to(message, "–Ø –æ—á–µ–Ω—å –ª—é–±–ª—é —Å–≤–æ–µ–≥–æ –º–ª–∞–¥—à–µ–≥–æ –±—Ä–∞—Ç–∏—à–∫—É!\n:3")
        msgo = bot.send_message(message.chat.id, text="–ï—Å–ª–∏ –∏–º–µ—é—Ç—Å—è –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, —Å–ø—Ä–∞—à–∏–≤–∞–π. –Ø –Ω–µ –ø—Ä–æ—Ç–∏–≤.\n:3",
                                reply_markup=life)
        bot.register_next_step_handler(msgo, your_life)

    # –û–ª–µ—Å—è —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–º –æ —á–ª–µ–Ω–∞—Ö —Å–≤–æ–µ–π —Å–µ–º—å–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–º –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö —Ä–∏—Å—É–Ω–∫–æ–≤ –º–ª–∞–¥—à–µ–≥–æ –±—Ä–∞—Ç–∞.
    elif message.text == "–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, –∫–∞–∫ —Ç—ã –ø–æ–∂–∏–≤–∞–µ—à—å.":
        life = types.ReplyKeyboardMarkup()
        rest = types.KeyboardButton("–ö–∞–∫ –≤—ã –æ—Ç–¥—ã—Ö–∞–µ—Ç–µ?")
        family = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–º—å–µ.")
        you = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, –∫–∞–∫ —Ç—ã –ø–æ–∂–∏–≤–∞–µ—à—å.")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        life.row(rest, family, you)
        life.row(back)

        bot.reply_to(message, choice(life_dialog[0]["life"]["olesya"]))
        msgo = bot.send_message(message.chat.id, text="–ï—Å–ª–∏ –∏–º–µ—é—Ç—Å—è –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, —Å–ø—Ä–∞—à–∏–≤–∞–π. –Ø –Ω–µ –ø—Ä–æ—Ç–∏–≤.\n:3",
                                reply_markup=life)
        bot.register_next_step_handler(msgo, your_life)

    # –û–ª–µ—Å—è —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–º –æ–± –æ—Ç–¥—ã—Ö–µ –Ω–∞ –º–æ—Ä–µ, –¥–µ–ª–∞—è —ç—Ç–æ –∫–∞–∫ –ø–æ–¥–≤–æ–¥–∫—É –∫ –ø–æ–∫–∞–∑—É –µ—â—ë –æ–¥–Ω–æ–≥–æ —Ä–∏—Å—É–Ω–∫–∞ —Å–≤–æ–µ–≥–æ –±—Ä–∞—Ç–∏–∫–∞.
    elif message.text == "–ö–∞–∫ –≤—ã –æ—Ç–¥—ã—Ö–∞–µ—Ç–µ?":
        life = types.ReplyKeyboardMarkup()
        rest = types.KeyboardButton("–ö–∞–∫ –≤—ã –æ—Ç–¥—ã—Ö–∞–µ—Ç–µ?")
        family = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–º—å–µ.")
        you = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, –∫–∞–∫ —Ç—ã –ø–æ–∂–∏–≤–∞–µ—à—å.")
        back = types.KeyboardButton("üëâ–ù–ê–ó–ê–îüëà")
        life.row(rest, family, you)
        life.row(back)

        bot.reply_to(message, choice(life_dialog[0]["life"]["vacation"]))
        img = open('brothers_painting.png', 'rb')
        bot.send_photo(message.chat.id, img)
        bot.reply_to(message,"–ê –≤–æ—Ç –∏ —Å–∞–º —Ä–∏—Å—É–Ω–æ–∫!\n:)")
        msgo = bot.send_message(message.chat.id, text="–ö–∞–∫–∏–µ —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã –µ—â—ë –æ—Å—Ç–∞–ª–∏—Å—å?",
                                reply_markup=life)
        bot.register_next_step_handler(msgo, your_life)

    # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥. –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    elif message.text == "üëâ–ù–ê–ó–ê–îüëà":
        themes = types.ReplyKeyboardMarkup()
        drawing = types.KeyboardButton("üíû–û –†–ò–°–û–í–ê–ù–ò–òüíû")
        life = types.KeyboardButton("üçÉ–û –ñ–ò–ó–ù–òüçÉ")
        school = types.KeyboardButton("ü•Ä–û –®–ö–û–õ–ïü•Ä")
        music = types.KeyboardButton("üçÑ–û –ú–£–ó–´–ö–ïüçÑ")
        preferences = types.KeyboardButton("üçì–û –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø–•üçì")
        me = types.KeyboardButton("‚ú®–û–ë–û –ú–ù–ï‚ú®")
        themes.row(drawing, me)
        themes.row(life, school)
        themes.row(music, preferences)
        msq = bot.reply_to(message, "–•–æ—Ä–æ—à–æ, –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —á—ë–º-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–º.", reply_markup=themes)
        bot.register_next_step_handler(msq, choose)


bot.polling(none_stop=True)